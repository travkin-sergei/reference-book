# Generated by Django 5.1.6 on 2025-03-16 18:54

import django.db.models.deletion
import django_ckeditor_5.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataAssetGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('name', models.CharField(blank=True, help_text='Названия групп источников данных.', max_length=255, null=True, verbose_name='Названия групп источников данных.')),
                ('description', models.TextField(blank=True, help_text='Описание групп источников данных.', null=True, verbose_name='Описание групп источников данных.')),
            ],
            options={
                'verbose_name': '__ Группа источников',
                'verbose_name_plural': '__ Группы источников',
                'db_table': 'my_data_asset"."data_asset_group',
                'managed': True,
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='DataAssetStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('name', models.CharField(db_comment='{"name":"Статус ресурса.",}', max_length=255, verbose_name='Статус ресурса')),
            ],
            options={
                'verbose_name': '01.2 Статус источника данных',
                'verbose_name_plural': '01.2 Статус источников данных',
                'db_table': 'my_data_asset"."data_asset_status',
                'managed': True,
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='DataAssetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('name', models.CharField(db_comment='{"name":"Тип источника данных.",}', help_text='Тип источника данных.', max_length=255)),
            ],
            options={
                'verbose_name': '01.1 Тип источника данных',
                'verbose_name_plural': '01.1 Типы источников данных',
                'db_table': 'my_data_asset"."data_asset_type',
                'managed': True,
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='DataAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('hash_address', models.CharField(blank=True, db_comment='{"name":"Хеш адрес строки","description":"Алгоритм sha256. Важно соблюдать регистр и порядок.",}', help_text='Алгоритм sha256. Важно соблюдать регистр и порядок.', max_length=64, null=True)),
                ('task', models.CharField(blank=True, db_comment='{"name":"Задача, в рамках которой появилась запись.","description":"Имеется в виду не в этой базе данных, а в источнике, если это применимо.",,}', help_text='Алгоритм sha256. Важно соблюдать регистр и порядок.', max_length=64, null=True)),
                ('last_update', models.DateField(auto_now=True, db_comment='{name":"Последнее обновление информации об источнике", "description":"не надо путать с обновлением строки базы данных.",}', help_text='Последнее обновление информации об источнике данных.', verbose_name='Последнее обновление.')),
                ('uir', models.CharField(blank=True, db_comment='{"name":"Уникальный идентификатор ресурса",}', help_text='Уникальный идентификатор ресурса.', max_length=255, null=True, verbose_name='УИР.')),
                ('url', models.URLField(blank=True, db_comment='{"name":"URL ссылка.",}', help_text='URL ссылка.', null=True, verbose_name='URL.')),
                ('name', models.CharField(blank=True, db_comment='{"name":"Название ресурса",}', help_text='Название ресурса', max_length=255, null=True, verbose_name='Название')),
                ('comment', django_ckeditor_5.fields.CKEditor5Field(blank=True, db_comment='{"name":"Описание ресурса",}', help_text='Описание ресурса.', null=True, verbose_name='Комментарий')),
                ('version', models.CharField(blank=True, db_comment='{"name":"Версия ресурса.",}', help_text='Версия ресурса.', max_length=255, null=True, verbose_name='Версия')),
                ('host', models.CharField(blank=True, db_comment='{"name":"Хост.",}', max_length=255, null=True, verbose_name='Хост')),
                ('port', models.CharField(blank=True, db_comment='{"name":"Порт",}', max_length=255, null=True, verbose_name='Порт.')),
                ('status', models.ForeignKey(blank=True, db_comment='{"name":"Статус",}', null=True, on_delete=django.db.models.deletion.CASCADE, to='my_data_asset.dataassetstatus', verbose_name='Статус')),
                ('type', models.ForeignKey(blank=True, db_comment='{"name":"Тип источника данных.",}', help_text='Тип источника данных.', null=True, on_delete=django.db.models.deletion.CASCADE, to='my_data_asset.dataassettype', verbose_name='Тип источника данных')),
            ],
            options={
                'verbose_name': '01 Источник данных',
                'verbose_name_plural': '01 Источники данных',
                'db_table': 'my_data_asset"."data_asset',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('hash_address', models.CharField(blank=True, db_comment='{"name":"Хеш адрес строки","description":"Алгоритм sha256. Важно соблюдать регистр и порядок.",}', help_text='Алгоритм sha256. Важно соблюдать регистр и порядок.', max_length=64, null=True)),
                ('task', models.CharField(blank=True, db_comment='{"name":"Задача, в рамках которой появилась запись.","description":"Имеется в виду не в этой базе данных, а в источнике, если это применимо.",,}', help_text='Алгоритм sha256. Важно соблюдать регистр и порядок.', max_length=64, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Комментарий.', null=True)),
                ('data_asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='my_data_asset.dataasset')),
            ],
            options={
                'verbose_name': '02 Модель данных',
                'verbose_name_plural': '02 Модели данных',
                'db_table': 'my_data_asset"."data_model',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataModelGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('name', models.CharField(blank=True, help_text='Названия групп источников данных.', max_length=255, null=True, verbose_name='Названия групп источников данных.')),
                ('data_models', models.ManyToManyField(help_text='Группировка источников данны.', related_name='f_model', to='my_data_asset.datamodel', verbose_name='Группировка источников данных.')),
            ],
            options={
                'verbose_name': '__ Группа источников',
                'verbose_name_plural': '__ Группы источников',
                'db_table': 'my_data_asset"."data_model_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('hash_address', models.CharField(blank=True, db_comment='{"name":"Хеш адрес строки","description":"Алгоритм sha256. Важно соблюдать регистр и порядок.",}', help_text='Алгоритм sha256. Важно соблюдать регистр и порядок.', max_length=64, null=True)),
                ('task', models.CharField(blank=True, db_comment='{"name":"Задача, в рамках которой появилась запись.","description":"Имеется в виду не в этой базе данных, а в источнике, если это применимо.",,}', help_text='Алгоритм sha256. Важно соблюдать регистр и порядок.', max_length=64, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Комментарий.', null=True)),
                ('data_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='my_data_asset.datamodel')),
            ],
            options={
                'verbose_name': '03 Таблица данных',
                'verbose_name_plural': '03 Таблицы данных',
                'db_table': 'my_data_asset"."data_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataTableGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('name', models.CharField(blank=True, help_text='Названия групп источников данных.', max_length=255, null=True, verbose_name='Названия групп источников данных.')),
                ('data_tables', models.ManyToManyField(help_text='Группировка источников данны.', related_name='f_table', to='my_data_asset.datatable', verbose_name='Группировка источников данных.')),
            ],
            options={
                'verbose_name': '__ Группа источников',
                'verbose_name_plural': '__ Группы источников',
                'db_table': 'my_data_asset"."data_table_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('hash_address', models.CharField(blank=True, db_comment='{"name":"Хеш адрес строки","description":"Алгоритм sha256. Важно соблюдать регистр и порядок.",}', help_text='Алгоритм sha256. Важно соблюдать регистр и порядок.', max_length=64, null=True)),
                ('task', models.CharField(blank=True, db_comment='{"name":"Задача, в рамках которой появилась запись.","description":"Имеется в виду не в этой базе данных, а в источнике, если это применимо.",,}', help_text='Алгоритм sha256. Важно соблюдать регистр и порядок.', max_length=64, null=True)),
                ('name', models.CharField(blank=True, db_comment='{"name":"Название",}', help_text='Название', max_length=255, null=True, verbose_name='Название')),
                ('oid', models.IntegerField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('default', models.CharField(blank=True, max_length=255, null=True)),
                ('expression', models.CharField(blank=True, max_length=255, null=True)),
                ('is_nullable', models.BooleanField(blank=True, null=True)),
                ('is_generated', models.BooleanField(blank=True, null=True)),
                ('is_check', models.BooleanField(blank=True, null=True)),
                ('is_unique', models.BooleanField(blank=True, null=True)),
                ('is_primary_key', models.BooleanField(blank=True, null=True)),
                ('is_excluded', models.BooleanField(blank=True, null=True)),
                ('data_table', models.ForeignKey(blank=True, db_comment='{"name":"Список таблиц данных моделей.",}', help_text='Список таблиц данных моделей.', null=True, on_delete=django.db.models.deletion.CASCADE, to='my_data_asset.datatable', verbose_name='Список таблиц данных моделей.')),
                ('parent', models.ForeignKey(blank=True, db_comment='{"name":"Внешний ключ к столбцу",}', help_text='Внешний ключ к столбцу', null=True, on_delete=django.db.models.deletion.CASCADE, to='my_data_asset.datavalue', verbose_name='Внешний ключ к столбцу')),
            ],
            options={
                'verbose_name': '04 Значения таблицы',
                'verbose_name_plural': '04 Значения таблицы',
                'db_table': 'my_data_asset"."data_value',
                'ordering': ['created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataValueGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('name', models.CharField(blank=True, help_text='Названия групп столбцов данных.', max_length=255, null=True, verbose_name='Названия групп столбцов данных.')),
                ('data_values', models.ManyToManyField(help_text='Группировка источников данны.', related_name='f_value', to='my_data_asset.datavalue', verbose_name='Группировка источников данных.')),
            ],
            options={
                'verbose_name': '__ Группа источников',
                'verbose_name_plural': '__ Группы источников',
                'db_table': 'my_data_asset"."data_value_groups',
            },
        ),
        migrations.CreateModel(
            name='DataAssetGroupAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_comment='{"name":"Строка в базе данных создана.",}', help_text='Дата создания строки в текущей базе данных.')),
                ('updated_at', models.DateTimeField(auto_now=True, db_comment='{"name":"Строка в базе данных обновлена.",}', help_text='Дата обновления строки в текущей базе данных.')),
                ('is_active', models.BooleanField(db_comment='{"name":"Стока в базе данных активна.",}', default=True, help_text='Является ли запись действующей на текущей момент?')),
                ('data_assets', models.ForeignKey(help_text='Список описанных источников данных.', on_delete=django.db.models.deletion.CASCADE, related_name='related_assets', to='my_data_asset.dataasset', verbose_name='Список описанных источников данных.')),
                ('name', models.ForeignKey(help_text='Названия групп источников данных.', on_delete=django.db.models.deletion.CASCADE, related_name='related_group', to='my_data_asset.dataassetgroup', verbose_name='Названия групп источников данных.')),
            ],
            options={
                'verbose_name': '__ Группа источников',
                'verbose_name_plural': '__ Группы источников',
                'db_table': 'my_data_asset"."data_asset_group_list',
                'managed': True,
                'unique_together': {('name', 'data_assets')},
            },
        ),
        migrations.AddConstraint(
            model_name='dataasset',
            constraint=models.UniqueConstraint(fields=('url',), name='unique_data_asset_url'),
        ),
        migrations.AlterUniqueTogether(
            name='datamodel',
            unique_together={('data_asset', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='datatable',
            unique_together={('data_model', 'type', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='datavalue',
            unique_together={('data_table', 'name')},
        ),
    ]
