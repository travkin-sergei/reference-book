# Generated by Django 5.1.6 on 2025-03-16 18:54

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MapLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('image', models.ImageField(upload_to='maps/')),
            ],
            options={
                'db_table': 'my_geo_id"."map_location',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoNames',
            fields=[
                ('creation_at', models.DateTimeField(auto_now_add=True, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('name', models.CharField(help_text='наименование', max_length=255, primary_key=True, serialize=False, verbose_name='наименование')),
                ('date_start', models.DateField(blank=True, help_text='Дата начала действия', null=True, verbose_name='Дата начала действия')),
                ('date_stop', models.DateField(blank=True, help_text='Дата прекращения действия', null=True, verbose_name='Дата прекращения действия')),
                ('user', models.ForeignKey(help_text='Автор', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': '01.01 название геобъекта',
                'verbose_name_plural': '01.01 названия геобъектов',
                'db_table': 'my_geo_id"."geo_names',
                'db_table_comment': '{"name":"Название геобъекта","description":"Таблица создана для ведения списка уникальных геообъектов",}',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoObject',
            fields=[
                ('creation_at', models.DateTimeField(auto_now_add=True, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('object_code', models.CharField(help_text='кода автогенерируемый в модели', max_length=6, primary_key=True, serialize=False, verbose_name='уникальный код гео объекта')),
                ('object_name', models.CharField(help_text='подтягивается из языковой модели', max_length=255, unique=True, verbose_name='техническое наименование')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала действия')),
                ('date_stop', models.DateField(blank=True, null=True, verbose_name='дата прекращения действия')),
                ('geo_name', models.ManyToManyField(help_text='Все варианты названий', related_name='geo_objects', to='my_geo_id.geonames', verbose_name='Все варианты названий')),
                ('user', models.ForeignKey(help_text='Автор', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': '02 Геообъект',
                'verbose_name_plural': '02 Геообъекты',
                'db_table': 'my_geo_id"."geo_object',
                'db_table_comment': '{"name":"Геообъекты","description":"Таблица создана для ведения списка уникальных геообъектов"}',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_at', models.DateTimeField(auto_now_add=True, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('area', models.FloatField(blank=True, null=True, verbose_name='Площадь территории (кв. км)')),
                ('coordinates', models.TextField(blank=True, null=True, verbose_name='географические координаты.')),
                ('user', models.ForeignKey(help_text='Автор', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('geo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='geo_info', to='my_geo_id.geoobject', verbose_name='Геообъект')),
            ],
            options={
                'verbose_name': 'Площадь территории',
                'verbose_name_plural': 'Площадь территории',
                'db_table': 'my_geo_id"."geo_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoObjectCodeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_at', models.DateTimeField(auto_now_add=True, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('code_type', models.CharField(max_length=255)),
                ('user', models.ForeignKey(help_text='Автор', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': '03 Тип кодов',
                'verbose_name_plural': '03 Типы кодов',
                'db_table': 'my_geo_id"."geo_object_code_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoObjectCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_at', models.DateTimeField(auto_now_add=True, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('main', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_geo_id.geoobject')),
                ('user', models.ForeignKey(help_text='Автор', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('code_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_geo_id.geoobjectcodetype')),
            ],
            options={
                'verbose_name': '03.01 Справочник',
                'verbose_name_plural': '03.01 Справочники',
                'db_table': 'my_geo_id"."geo_object_code',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoObjectMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_at', models.DateTimeField(auto_now_add=True, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('main', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_geo_id.geoobject')),
                ('user', models.ForeignKey(help_text='Автор', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': '04.01 Группировка',
                'verbose_name_plural': '04.01 Группировка',
                'db_table': 'my_geo_id"."geo_object_map',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GeoObjectMapType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_at', models.DateTimeField(auto_now_add=True, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('map_type', models.CharField(help_text='Тип группировки', max_length=255, verbose_name='Тип группировки')),
                ('user', models.ForeignKey(help_text='Автор', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': '04 тип связи гео',
                'verbose_name_plural': '04 тип связи гео',
                'db_table': 'my_geo_id"."geo_object_map_type',
                'db_table_comment': '{"name":"тип связи гео объекта","description":""}',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HistoricalGeoObject',
            fields=[
                ('creation_at', models.DateTimeField(blank=True, editable=False, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(blank=True, editable=False, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('object_code', models.CharField(db_index=True, help_text='кода автогенерируемый в модели', max_length=6, verbose_name='уникальный код гео объекта')),
                ('object_name', models.CharField(db_index=True, help_text='подтягивается из языковой модели', max_length=255, verbose_name='техническое наименование')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала действия')),
                ('date_stop', models.DateField(blank=True, null=True, verbose_name='дата прекращения действия')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, help_text='Автор', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'historical 02 Геообъект',
                'verbose_name_plural': 'historical 02 Геообъекты',
                'db_table': 'geo_object_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGeoObjectCode',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('creation_at', models.DateTimeField(blank=True, editable=False, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(blank=True, editable=False, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('code_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='my_geo_id.geoobjectcodetype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='my_geo_id.geoobject')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, help_text='Автор', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'historical 03.01 Справочник',
                'verbose_name_plural': 'historical 03.01 Справочники',
                'db_table': 'geo_object_code_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGeoObjectCodeSub',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('code_name', models.CharField(max_length=255)),
                ('is_group', models.BooleanField(db_comment='{"name":"это группа объектов текущегосправочника?.""description":"это группа объектов текущегосправочника?"}', default=False, help_text='это группа объектов текущегосправочника?', verbose_name='это группа объектов текущегосправочника?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('geo_object', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='my_geo_id.geoobject')),
                ('geo_object_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='my_geo_id.geoobjectcode')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('name', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='my_geo_id.geonames')),
            ],
            options={
                'verbose_name': 'historical 03.02 Справочник',
                'verbose_name_plural': 'historical 03.02 Справочники',
                'db_table': 'geo_object_code_sub_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGeoObjectCodeType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('creation_at', models.DateTimeField(blank=True, editable=False, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(blank=True, editable=False, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('code_type', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, help_text='Автор', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'historical 03 Тип кодов',
                'verbose_name_plural': 'historical 03 Типы кодов',
                'db_table': 'geo_object_code_type_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGeoObjectMap',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('creation_at', models.DateTimeField(blank=True, editable=False, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(blank=True, editable=False, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('main', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='my_geo_id.geoobject')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, help_text='Автор', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'historical 04.01 Группировка',
                'verbose_name_plural': 'historical 04.01 Группировка',
                'db_table': 'geo_object_map_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGeoObjectMapSub',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала действия')),
                ('date_stop', models.DateField(blank=True, null=True, verbose_name='дата прекращения действия')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('code_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='my_geo_id.geoobjectmaptype')),
                ('geo_object', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='my_geo_id.geoobject')),
                ('geo_object_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='my_geo_id.geoobjectmap')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical 04.02 Группировка',
                'verbose_name_plural': 'historical 04.02 Группировка',
                'db_table': 'geo_object_map_sub_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGeoObjectMapType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('creation_at', models.DateTimeField(blank=True, editable=False, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(blank=True, editable=False, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('map_type', models.CharField(help_text='Тип группировки', max_length=255, verbose_name='Тип группировки')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, help_text='Автор', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'historical 04 тип связи гео',
                'verbose_name_plural': 'historical 04 тип связи гео',
                'db_table': 'geo_object_map_type_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLanguage',
            fields=[
                ('creation_at', models.DateTimeField(blank=True, editable=False, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(blank=True, editable=False, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('language', models.CharField(db_index=True, max_length=5)),
                ('name', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, help_text='Автор', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'historical 01 список языков',
                'verbose_name_plural': 'historical 01 список языков',
                'db_table': 'geo_language_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('creation_at', models.DateTimeField(auto_now_add=True, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('language', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('user', models.ForeignKey(help_text='Автор', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': '01 список языков',
                'verbose_name_plural': '01 список языков',
                'db_table': 'my_geo_id"."geo_language',
                'db_table_comment': '{"name":"Список языков","description":"список языков"}',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HistoricalGeoNames',
            fields=[
                ('creation_at', models.DateTimeField(blank=True, editable=False, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(blank=True, editable=False, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('name', models.CharField(db_index=True, help_text='наименование', max_length=255, verbose_name='наименование')),
                ('date_start', models.DateField(blank=True, help_text='Дата начала действия', null=True, verbose_name='Дата начала действия')),
                ('date_stop', models.DateField(blank=True, help_text='Дата прекращения действия', null=True, verbose_name='Дата прекращения действия')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, help_text='Автор', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('language', models.ForeignKey(blank=True, db_constraint=False, help_text='язык', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='my_geo_id.language', verbose_name='язык')),
            ],
            options={
                'verbose_name': 'historical 01.01 название геобъекта',
                'verbose_name_plural': 'historical 01.01 названия геобъектов',
                'db_table': 'geo_names_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='geonames',
            name='language',
            field=models.ForeignKey(help_text='язык', on_delete=django.db.models.deletion.CASCADE, related_name='names', to='my_geo_id.language', verbose_name='язык'),
        ),
        migrations.CreateModel(
            name='GeoObjectCodeSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_name', models.CharField(max_length=255)),
                ('is_group', models.BooleanField(db_comment='{"name":"это группа объектов текущегосправочника?.""description":"это группа объектов текущегосправочника?"}', default=False, help_text='это группа объектов текущегосправочника?', verbose_name='это группа объектов текущегосправочника?')),
                ('geo_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_geo_id.geoobject')),
                ('geo_object_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_objects', to='my_geo_id.geoobjectcode')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='my_geo_id.geonames')),
            ],
            options={
                'verbose_name': '03.02 Справочник',
                'verbose_name_plural': '03.02 Справочники',
                'db_table': 'my_geo_id"."geo_object_code_sub',
                'db_table_comment': '{"name":"geo_object_code_sub",}',
                'managed': True,
                'unique_together': {('geo_object_code', 'geo_object')},
            },
        ),
        migrations.CreateModel(
            name='GeoObjectMapSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала действия')),
                ('date_stop', models.DateField(blank=True, null=True, verbose_name='дата прекращения действия')),
                ('geo_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_geo_id.geoobject')),
                ('geo_object_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_objects', to='my_geo_id.geoobjectmap')),
                ('code_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_geo_id.geoobjectmaptype')),
            ],
            options={
                'verbose_name': '04.02 Группировка',
                'verbose_name_plural': '04.02 Группировка',
                'db_table': 'my_geo_id"."geo_object_map_sub',
                'db_table_comment': '{"name":"geo_object_map_sub",}',
                'managed': True,
                'unique_together': {('geo_object_code', 'geo_object')},
            },
        ),
        migrations.CreateModel(
            name='GeoObjectSynonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_at', models.DateTimeField(auto_now_add=True, help_text='Создано', verbose_name='Создано')),
                ('update_at', models.DateTimeField(auto_now=True, help_text='Обновлено', verbose_name='Обновлено')),
                ('is_active', models.BooleanField(default=True, help_text='Запись активна?', verbose_name='Запись активна?')),
                ('task', models.URLField(help_text='Задача в Jira', verbose_name='Задача в Jira')),
                ('name', models.CharField(help_text='Текст', max_length=255)),
                ('geo', models.ForeignKey(help_text='Ссылка на объект', on_delete=django.db.models.deletion.CASCADE, to='my_geo_id.geoobject')),
                ('user', models.ForeignKey(help_text='Автор', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('language', models.ForeignKey(help_text='alfa-2 языка', on_delete=django.db.models.deletion.CASCADE, to='my_geo_id.language')),
            ],
            options={
                'verbose_name': '00 Синонимы геообъекта',
                'verbose_name_plural': '02 Синонимы геообъектов',
                'db_table': 'my_geo_id"."geo_object_synonym',
                'db_table_comment': '{"name":"Синонимы названий геообъектов",}',
                'managed': True,
                'unique_together': {('geo', 'language', 'name')},
            },
        ),
    ]
